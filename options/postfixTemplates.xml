<application>
  <component name="PostfixTemplates">
    <template id="andNull@userDefined" key=".andNull" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions />
      <template name="fakeKey" value="&amp;&amp; java.util.Objects.isNull($EXPR$)" description="" toReformat="true" toShortenFQNames="true" useStaticImport="true" />
    </template>
    <template id="pl@userDefined" key=".pl" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions />
      <template name="fakeKey" value="private long $EXPR$;" toReformat="true" toShortenFQNames="true" />
    </template>
    <template id="isNull@userDefined" key=".isNull" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions>
        <condition id="non void" />
      </conditions>
      <template name="fakeKey" value="assertThat($EXPR$).isNull();" description="" toReformat="true" toShortenFQNames="true" useStaticImport="true" />
    </template>
    <template id="unmodifiableSet@userDefined" key=".unmodifiableSet" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions>
        <condition id="fqn" fqn="java.util.Set" />
      </conditions>
      <template name="fakeKey" value="java.util.Collections.unmodifiableSet($EXPR$);" description="" toReformat="true" toShortenFQNames="true" />
    </template>
    <template id="checkNull@userDefined" key=".checkNull" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions />
      <template name="fakeKey" value="if(java.util.Objects.isNull($EXPR$))&#10;{&#10; $END$;&#10;}" description="" toReformat="true" toShortenFQNames="true" />
    </template>
    <template id="isNotNull@userDefined" key=".isNotNull" provider="builtin.java" language-level="1.3" topmost="true">
      <conditions>
        <condition id="non void" />
      </conditions>
      <template name="fakeKey" value="assertThat($EXPR$).isNotNull();" description="" toReformat="true" toShortenFQNames="true" useStaticImport="true" />
    </template>
    <template id="unmodifiableMap@userDefined" key=".unmodifiableMap" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions>
        <condition id="fqn" fqn="java.util.Map" />
      </conditions>
      <template name="fakeKey" value="Collections.unmodifiableSet($EXPR$);" description="" toReformat="true" toShortenFQNames="true" useStaticImport="true" />
    </template>
    <template id="ps@userDefined" key=".ps" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions />
      <template name="fakeKey" value="private String $EXPR$;" toReformat="true" toShortenFQNames="true" />
    </template>
    <template id="retrunList@userDefined" key=".retrunList" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions>
        <condition id="fqn" fqn="java.util.List" />
      </conditions>
      <template name="fakeKey" value="return Collections.unmodifiableList($EXPR$);" description="" toReformat="true" toShortenFQNames="true" />
    </template>
    <template id="gen@userDefined" key=".gen" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions />
      <template name="fakeKey" value=" int[] intArray = new int[]{ 1,2,3,4,5,6,7,8,9,10 };" description="" toReformat="true" toShortenFQNames="true" />
    </template>
    <template id="returnMap@userDefined" key=".returnMap" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions>
        <condition id="fqn" fqn="java.util.Map" />
      </conditions>
      <template name="fakeKey" value="return Collections.unmodifiableMap($EXPR$);" description="" toReformat="true" toShortenFQNames="true" />
    </template>
    <template id="verifyNever@userDefined" key=".verifyNever" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions>
        <condition id="non void" />
      </conditions>
      <template name="fakeKey" value="org.mockito.Mockito.verify($EXPR$, org.mockito.Mockito.never())$END$;" description="" toReformat="true" toShortenFQNames="true" useStaticImport="true" />
    </template>
    <template id="isFalse@userDefined" key=".isFalse" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions>
        <condition id="boolean" />
      </conditions>
      <template name="fakeKey" value="assertThat($EXPR$).isFalse();" description="" toReformat="true" toShortenFQNames="true" useStaticImport="true" />
    </template>
    <template id="fail@userDefined" key=".fail" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions />
      <template name="fakeKey" value=" Assert.fail($EXPR$);" description="" toReformat="true" toShortenFQNames="true" useStaticImport="true" />
    </template>
    <template id="one_hundread@userDefined" key=".one_hundread" provider="builtin.java" language-level="1.3" topmost="true">
      <conditions />
      <template name="fakeKey" value="int [] $EXPR$ = {1 ,2 ,4 ,6 ,7 ,9 ,10 ,11 ,12 ,13 ,14 ,15 ,16 ,17 ,18 ,19 ,20 ,21 ,22 ,23 ,24 ,25 ,26 ,27 ,28 ,29 ,30 ,31 ,32 ,33 ,34 ,35 ,36 ,37 ,38 ,39 ,40 ,41 ,42 ,43 ,45 ,46 ,47 ,48 ,49 ,50 ,51 ,52 ,53 ,54 ,55 ,56 ,57 ,58 ,59 ,60 ,61 ,62 ,63 ,64 ,65 ,66 ,67 ,68 ,69 ,70 ,71 ,72 ,73 ,74 ,75 ,76 ,77 ,78 ,79 ,80 ,81 ,82 ,83 ,84 ,85 ,86 ,87 ,88 ,89 ,90 ,91 ,92 ,93 ,94 ,95 ,96 ,97 ,98 ,99 ,100};&#10;$END$" description="" toReformat="true" toShortenFQNames="true" />
    </template>
    <template id="and@userDefined" key=".and" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions>
        <condition id="boolean" />
      </conditions>
      <template name="fakeKey" value="&amp;&amp; $EXPR$" description="" toReformat="true" toShortenFQNames="true" />
    </template>
    <template id="verifyOnce@userDefined" key=".verifyOnce" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions>
        <condition id="non void" />
      </conditions>
      <template name="fakeKey" value="org.mockito.Mockito.verify($EXPR$, org.mockito.Mockito.atLeastOnce())$END$;" description="" toReformat="true" toShortenFQNames="true" />
    </template>
    <template id="assertNotNull@userDefined" key=".assertNotNull" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions>
        <condition id="non void" />
      </conditions>
      <template name="fakeKey" value="org.junit.Assert.assertNotNull($EXPR$);" description="" toReformat="true" toShortenFQNames="true" useStaticImport="true" />
    </template>
    <template id="checkEqual@userDefined" key=".checkEqual" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions />
      <template name="fakeKey" value="if(Objects.equals($EXPR$, $END$))&#10;{&#10; $END$&#10;}" description="" toReformat="true" toShortenFQNames="true" />
    </template>
    <template id="or@userDefined" key=".or" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions>
        <condition id="boolean" />
      </conditions>
      <template name="fakeKey" value="|| $EXPR$" description="" toReformat="true" toShortenFQNames="true" />
    </template>
    <template id="orNotNull@userDefined" key=".orNotNull" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions />
      <template name="fakeKey" value="|| java.util.Objects.nonNull($EXPR$)" description="" toReformat="true" toShortenFQNames="true" useStaticImport="true" />
    </template>
    <template id="checkNonEmpty@userDefined" key=".checkNonEmpty" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions>
        <condition id="fqn" fqn="java.util.List" />
        <condition id="fqn" fqn="java.util.Set" />
        <condition id="fqn" fqn="java.util.Map" />
        <condition id="fqn" fqn="com.ericsson.bss.rm.invoicing.dataaccess.views.customer.views.Views" />
      </conditions>
      <template name="fakeKey" value="if(java.util.Objects.nonNull($EXPR$) &amp;&amp; !$EXPR$.isEmpty())&#10;{&#10; $END$;&#10;}" description="" toReformat="true" toShortenFQNames="true" />
    </template>
    <template id="checkNotNull@userDefined" key=".checkNotNull" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions />
      <template name="fakeKey" value="if(Objects.nonNull($EXPR$))&#10;{&#10; &lt;spot/&gt;;&#10;}" description="" toReformat="true" toShortenFQNames="true" />
    </template>
    <template id="isTrue@userDefined" key=".isTrue" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions>
        <condition id="boolean" />
      </conditions>
      <template name="fakeKey" value="assertThat($EXPR$).isTrue();" description="" toReformat="true" toShortenFQNames="true" useStaticImport="true" />
    </template>
    <template id="assertThat@userDefined" key=".assertThat" provider="builtin.java" language-level="1.3" topmost="true">
      <conditions>
        <condition id="non void" />
      </conditions>
      <template name="fakeKey" value="assertThat($EXPR$).isNotNull();" description="" toReformat="true" toShortenFQNames="true" useStaticImport="true" />
    </template>
    <template id="unmodifiableList@userDefined" key=".unmodifiableList" provider="builtin.java" language-level="1.3" topmost="true">
      <conditions>
        <condition id="fqn" fqn="java.util.List" />
      </conditions>
      <template name="fakeKey" value="java.util.Collections.unmodifiableList($EXPR$);" description="" toReformat="true" toShortenFQNames="true" />
    </template>
    <template id="debug@userDefined" key=".debug" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions>
        <condition id="fqn" fqn="com.ericsson.bss.rm.invoicing.common.privacy.utils.MultiLineToStringHelper" />
      </conditions>
      <template name="fakeKey" value="if (LOG.isDebugEnabled())&#10;{&#10;    LOG.debug(&quot;$END$ {}&quot;, $EXPR$);&#10;}" description="" toReformat="true" toShortenFQNames="true" />
    </template>
    <template id="nonNull@userDefined" key=".nonNull" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions />
      <template name="fakeKey" value="if(java.util.Objects.nonNull($EXPR$))&#10;{&#10;$END$;  &#10;}" description="" toReformat="true" toShortenFQNames="true" />
    </template>
    <template id="verify1@userDefined" key=".verify1" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions>
        <condition id="non void" />
      </conditions>
      <template name="fakeKey" value="org.mockito.Mockito.verify($EXPR$, org.mockito.Mockito.times(1))$END$;" description="" toReformat="true" toShortenFQNames="true" useStaticImport="true" />
    </template>
    <template id="assertNull@userDefined" key=".assertNull" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions>
        <condition id="non void" />
      </conditions>
      <template name="fakeKey" value="org.junit.Assert.assertNull($EXPR$);" description="" toReformat="true" toShortenFQNames="true" useStaticImport="true" />
    </template>
    <template id="multiString@userDefined" key=".multiString" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions />
      <template name="fakeKey" value="com.ericsson.bss.rm.invoicing.common.privacy.utils.MultiLineToStringHelper.create().add(&quot;$EXPR$ &quot;, $EXPR$, com.ericsson.bss.rm.invoicing.common.privacy.cons.SensitiveType.NO_SENSITIVE);" description="" toReformat="true" toShortenFQNames="true" />
    </template>
    <template id="returnSet@userDefined" key=".returnSet" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions>
        <condition id="fqn" fqn="java.util.Set" />
      </conditions>
      <template name="fakeKey" value="return Collections.unmodifiableSet($EXPR$);" description="" toReformat="true" toShortenFQNames="true" />
    </template>
    <template id="verify@userDefined" key=".verify" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions>
        <condition id="non void" />
      </conditions>
      <template name="fakeKey" value="org.mockito.Mockito.verify($EXPR$)$END$;" description="" toReformat="true" toShortenFQNames="true" useStaticImport="true" />
    </template>
    <template id="orNull@userDefined" key=".orNull" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions />
      <template name="fakeKey" value="|| java.util.Objects.isNull($EXPR$)" description="" toReformat="true" toShortenFQNames="true" useStaticImport="true" />
    </template>
    <template id="whenThrow@userDefined" key=".whenThrow" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions>
        <condition id="non void" />
      </conditions>
      <template name="fakeKey" value="org.mockito.Mockito.when($EXPR$).thenThrow($END$);" description="" toReformat="true" toShortenFQNames="true" useStaticImport="true" />
    </template>
    <template id="assertTrue@userDefined" key=".assertTrue" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions>
        <condition id="boolean" />
      </conditions>
      <template name="fakeKey" value="org.junit.Assert.assertTrue($EXPR$);" description="" toReformat="true" toShortenFQNames="true" />
    </template>
    <template id="pb@userDefined" key=".pb" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions />
      <template name="fakeKey" value="private boolean $EXPR$;" toReformat="true" toShortenFQNames="true" />
    </template>
    <template id="pi@userDefined" key=".pi" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions />
      <template name="fakeKey" value="private int $EXPR$;" toReformat="true" toShortenFQNames="true" />
    </template>
    <template id="whenThen@userDefined" key=".whenThen" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions>
        <condition id="non void" />
      </conditions>
      <template name="fakeKey" value="org.mockito.Mockito.when($EXPR$).thenReturn($END$);" description="" toReformat="true" toShortenFQNames="true" useStaticImport="true" />
    </template>
    <template id="checkEmpty@userDefined" key=".checkEmpty" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions>
        <condition id="fqn" fqn="java.util.List" />
        <condition id="fqn" fqn="java.util.Set" />
        <condition id="fqn" fqn="java.util.Map" />
        <condition id="fqn" fqn="com.ericsson.bss.rm.invoicing.dataaccess.views.customer.views.Views" />
      </conditions>
      <template name="fakeKey" value="if(Objects.nonNull($EXPR$) &amp;&amp; $EXPR$.isEmpty())&#10;{&#10; $END$;&#10;}" description="" toReformat="true" toShortenFQNames="true" />
    </template>
    <template id="verify2@userDefined" key=".verify2" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions>
        <condition id="non void" />
      </conditions>
      <template name="fakeKey" value="org.mockito.Mockito.verify($EXPR$, org.mockito.Mockito.times(2))$END$;" description="" toReformat="true" toShortenFQNames="true" useStaticImport="true" />
    </template>
    <template id="andNotNull@userDefined" key=".andNotNull" provider="builtin.java" language-level="1.3" topmost="false">
      <conditions />
      <template name="fakeKey" value="&amp;&amp; java.util.Objects.nonNull($EXPR$)" description="" toReformat="true" toShortenFQNames="true" useStaticImport="true" />
    </template>
  </component>
</application>